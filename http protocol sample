using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace HttpProtocol
{
    class Program
    {
        static System.Net.Sockets.Socket socket = null;

        static System.Text.UTF8Encoding encoding = new UTF8Encoding();

        static void Main(string[] args)
        {
            string y=null;
            do
            {
                Console.WriteLine("1.HTTP GET Request");
                Console.WriteLine("2.HTTP POST Request");
                Console.Write("you choose:");
                int i = Int32.Parse(Console.ReadLine());

                if (i == 1)
                {
                    Console.WriteLine("Url below:");
                    Console.WriteLine(HttpGet(Console.ReadLine()));
                }
                else
                {

                    Console.WriteLine("Url below:");
                    string url = Console.ReadLine();
                    Console.WriteLine("data:");
                    string data = Console.ReadLine();
                    Console.WriteLine(HttpPost(url, data));
                }


                Console.WriteLine("do again?Yes(y) or No(n)");
                y = Console.ReadKey().KeyChar.ToString();
            } while (y != null && y.Equals("y"));
        }



        static string HttpPost(string url,string data)
        {
            socket = new System.Net.Sockets.Socket(System.Net.Sockets.AddressFamily.InterNetwork, System.Net.Sockets.SocketType.Stream, System.Net.Sockets.ProtocolType.IP);
            StringBuilder sb_receive = new StringBuilder();
            socket.Blocking = true;
            socket.Connect(new Uri(url).Host, new Uri(url).Port);
            if (socket.Connected)
            {
                //----------------http post format----------------------------------------------------
                //Method name+Space+PathAndQuery+Http version+enter carriage return code+line feed code
                StringBuilder sb_request = new StringBuilder("POST " + new Uri(url).PathAndQuery + " HTTP/1.1\r\n");

                //Header
                sb_request.Append("Host:" + new Uri(url).Host + (new Uri(url).Port == 80 ? string.Empty : ":" + new Uri(url).Port.ToString()) + "\r\n");

                //additional header info to post in header part
                sb_request.Append("Content-Type: application/x-www-form-urlencoded\r\n");
                //in here,i don't transfer the data in URL CODE
                //so,if u take it into the produce environment,please transfer first
                sb_request.Append("Content-Length: " + data.Length + "\r\n");

                //enter carriage return code+line feed code
                //tell server the header info is complete
                sb_request.Append("\r\n");


                //additional data part to post
                sb_request.Append(data);
                //----------------http post format----------------------------------------------------


                socket.Send(encoding.GetBytes(sb_request.ToString()));
                byte[] receive_stand = new byte[1024];
                int bytes = 0;
                while (true)
                {
                    bytes = socket.Receive(receive_stand, receive_stand.Length, System.Net.Sockets.SocketFlags.None);
                    if (bytes <= 0)
                        break;
                    sb_receive.Append(encoding.GetString(receive_stand.Take(bytes).ToArray<byte>()));
                }
                socket.Close();
            }
            return sb_receive.ToString();
        }


        static string HttpGet(string url)
        {
            socket = new System.Net.Sockets.Socket(System.Net.Sockets.AddressFamily.InterNetwork, System.Net.Sockets.SocketType.Stream, System.Net.Sockets.ProtocolType.IP);
            StringBuilder sb_receive = new StringBuilder();
            socket.Blocking = true;
            socket.Connect(new Uri(url).Host, new Uri(url).Port);
            if (socket.Connected)
            {
                //----------------http get format----------------------------------------------------
                //Method name+Space+PathAndQuery+Http version+carriage return code+line feed code
                StringBuilder sb_request = new StringBuilder("GET " + new Uri(url).PathAndQuery + " HTTP/1.1\r\n");

                //Header
                sb_request.Append("Host:" + new Uri(url).Host + (new Uri(url).Port == 80 ? string.Empty : ":" + new Uri(url).Port.ToString()) + "\r\n");

                //enter carriage return code+line feed code
                //tell server the header info is complete
                sb_request.Append("\r\n");
                //----------------http get format----------------------------------------------------

                socket.Send(encoding.GetBytes(sb_request.ToString()));
                byte[] receive_stand = new byte[1024];
                int bytes = 0;
                while (true) {
                    bytes = socket.Receive(receive_stand, receive_stand.Length, System.Net.Sockets.SocketFlags.None);
                    if (bytes <= 0)
                        break;
                    sb_receive.Append(encoding.GetString(receive_stand.Take(bytes).ToArray<byte>()));
                }
                socket.Close();
            }
            return sb_receive.ToString();
        }

    }
}
