/*
this is fit with rest style
let everything is been a resource

it's a standard http module,you can config it in web.config like below
    <httpModules>
      <!--<remove name="Session" />-->
      <remove name="RoleManager"/>
      <remove name="WindowsAuthentication"/>
      <remove name="FormsAuthentication"/>
      <remove name="PassportAuthentication"/>
      <remove name="UrlAuthorization"/>
      <remove name="FileAuthorization"/>
      <remove name="Profile"/>
      <add type="AccessControl.Access,BLL" name="Access"/>
    </httpModules>
    
it work to any request of whole website
*/
public class Access:IHttpModule
{
        public void Init(HttpApplication context)
        {
            //context.BeginRequest +=  AccessAction;
            context.PostAcquireRequestState += new EventHandler(AccessAction);
            //context.EndRequest += new EventHandler(end);
        }

        bool IsAbleAccess(string accessPath) {
            List<AccessUrl> lAbleAccessUrl = BackUserInfo.GetAbleAccessUrlOrDirectoryOfCurrentLoginEmployee();
            if (lAbleAccessUrl == null || lAbleAccessUrl.Count == 0)
                return false;
            else {
                foreach (AccessUrl m in lAbleAccessUrl) {
                    if (m.IsUrlNotDirectory==true && m.UrlPath.ToLower().IndexOf(accessPath) == 0)
                        return true;
                }
            }
            return false;
        }

        public void AccessAction(object sender, EventArgs e)
        {
            HttpApplication application = sender as HttpApplication;
            string accessPath = application.Context.Request.Path.ToLower();

            
            //if the resoures of request it's static files,it's okay
            if (accessPath.IndexOf("/content/") == 0 || accessPath.IndexOf("/__browserlink/") == 0 || accessPath.IndexOf("/css/") == 0 ||
                accessPath.IndexOf("/html/") == 0 || accessPath.IndexOf("/js/") == 0 ||
                accessPath.IndexOf("/scripts/") == 0)
                //nothing
                return;

            string extension = application.Context.Request.CurrentExecutionFilePathExtension;
            if (!string.IsNullOrEmpty(extension))
            {
                extension = extension.Trim().ToLower();
                if (extension == ".axd")
                    return;
            }

            
            if (!IsAbleAccess(accessPath))
            {
                application.Context.Response.Write(@"
                <meta http-equiv='Content-Type' content='text/html; charset=UTF-8' />
                <script>alert('you are not authorized');history.go(-1);</script>");
                application.CompleteRequest();
                return;
            }

        }

        //public void end(object sender, EventArgs e)
        //{
        //    HttpApplication application = sender as HttpApplication;
        //    application.Context.Response.Write("<h1>end request</h1><br>");
        //}

        public void Dispose()
        {

        }
}
